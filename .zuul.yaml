- project:
    templates:
      - publish-openstack-docs-pti
      - openstack-python3-ussuri-jobs
      - release-notes-jobs-python3
    check:
      jobs:
        - openstack-tox-cover:
            voting: false
        - openstack-tox-pylint:
            voting: false
        - sahara-tests-scenario
        - sahara-tests-scenario-v2
        - sahara-tests-tempest
        - sahara-tests-tempest-v2
        - sahara-tests-scenario-victoria
        - sahara-tests-scenario-ussuri
        - sahara-tests-scenario-train
        - sahara-tests-scenario-stein
    gate:
      queue: sahara
      jobs:
        - sahara-tests-scenario
        - sahara-tests-scenario-v2
        - sahara-tests-tempest
        - sahara-tests-tempest-v2
    experimental:
      jobs:
        - sahara-tests-scenario-multinode-spark

- job:
    name: sahara-tests-tempest
    description: |
      Run Tempest tests from the Sahara plugin.
    parent: devstack-tempest
    required-projects:
      - openstack/sahara-tests
      - openstack/sahara
      - openstack/sahara-plugin-ambari
      - openstack/sahara-plugin-cdh
      - openstack/sahara-plugin-mapr
      - openstack/sahara-plugin-spark
      - openstack/sahara-plugin-storm
      - openstack/sahara-plugin-vanilla
      - openstack/heat
      # - openstack/ceilometer
    vars:
      tempest_test_regex: ^(sahara_tempest_plugin.tests.)
      tox_envlist: all
      devstack_localrc:
        IMAGE_URLS: https://cloud-images.ubuntu.com/xenial/current/xenial-server-cloudimg-amd64-disk1.img
        TEMPEST_PLUGINS: /opt/stack/sahara-tests
        USE_PYTHON3: True
      devstack_local_conf:
        test-config:
          $TEMPEST_CONFIG:
            data_processing:
              test_image_name: xenial-server-cloudimg-amd64-disk1
              test_ssh_user: ubuntu
            data-processing-feature-enabled:
              s3: 'True'
      devstack_plugins:
        sahara: https://opendev.org/openstack/sahara
        heat: https://opendev.org/openstack/heat
        # ceilometer: https://opendev.org/openstack/ceilometer
      devstack_services:
        tls-proxy: false
    irrelevant-files:
      - ^.*\.rst$
      - ^api-ref/.*$
      - ^doc/.*$
      - ^etc/.*$
      - ^releasenotes/.*$
      - ^sahara_tests/.*$

- job:
    name: sahara-tests-tempest-v2
    description: |
      Run Tempest tests from the Sahara plugin against Sahara APIv2
      and Python 3.
    parent: sahara-tests-tempest
    required-projects:
      - openstack/python-saharaclient
    branches: master
    vars:
      devstack_localrc:
        USE_PYTHON3: 'True'
      devstack_local_conf:
        test-config:
          $TEMPEST_CONFIG:
            data-processing:
              api_version_saharaclient: '2'
              use_api_v2: 'True'
      devstack_services:
        s-account: false
        s-container: false
        s-object: false
        s-proxy: false

# variant for pre-Rocky branches (no S3)
- job:
    name: sahara-tests-tempest
    branches:
      - stable/ocata
      - stable/pike
      - stable/queens
    vars:
      devstack_localrc:
        USE_PYTHON3: 'False'
      devstack_local_conf:
        test-config:
          $TEMPEST_CONFIG:
            data-processing-feature-enabled:
              s3: 'False'

# variant for pre-Ussuri branches (Python 2 by default)
- job:
    name: sahara-tests-tempest
    branches:
      - stable/rocky
      - stable/stein
      - stable/train
    vars:
      devstack_localrc:
        USE_PYTHON3: 'False'

- job:
    name: sahara-tests-scenario
    description: |
      Run scenario tests for Sahara.
    parent: devstack
    roles:
      - zuul: openstack/devstack
      - zuul: openstack/sahara-image-elements
    required-projects:
      - openstack/sahara-tests
      - openstack/sahara
      - openstack/sahara-plugin-ambari
      - openstack/sahara-plugin-cdh
      - openstack/sahara-plugin-mapr
      - openstack/sahara-plugin-spark
      - openstack/sahara-plugin-storm
      - openstack/sahara-plugin-vanilla
      - openstack/heat
      # - openstack/ceilometer
      - openstack/sahara-image-elements
      - openstack/shade
    run: playbooks/sahara-tests-scenario.yaml
    host-vars:
      controller:
        devstack_plugins:
          sahara: https://opendev.org/openstack/sahara
          heat: https://opendev.org/openstack/heat
          # ceilometer: https://opendev.org/openstack/ceilometer
          shade: https://opendev.org/openstack/shade
    group-vars:
      subnode:
        devstack_services:
          tls-proxy: false
    vars:
      devstack_services:
        tls-proxy: false
      devstack_localrc:
        # required to contain (almost any) custom-built image
        SWIFT_LOOPBACK_DISK_SIZE: 8G
        SWIFT_MAX_FILE_SIZE: 8589934592
        USE_PYTHON3: True
      devstack_local_conf:
        post-config:
          $SAHARA_CONF_FILE:
            DEFAULT:
              min_transient_cluster_active_time: 90
      sahara_image_name: xenial-server
      sahara_image_url: https://cloud-images.ubuntu.com/xenial/current/xenial-server-cloudimg-amd64-disk1.img
      sahara_plugin: fake
      sahara_plugin_version: '0.1'
      sahara_scenario_test_template: fake.yaml.mako
      sahara_scenario_tox_env: venv
    irrelevant-files:
      - ^.*\.rst$
      - ^api-ref/.*$
      - ^doc/.*$
      - ^releasenotes/.*$
      - ^sahara_tempest_plugin/.*$

- job:
    name: sahara-tests-scenario-v2
    parent: sahara-tests-scenario
    vars:
      sahara_scenario_use_api_v2: True

- job:
    name: sahara-tests-scenario-victoria
    parent: sahara-tests-scenario-py3
    override-checkout: stable/victoria

- job:
    name: sahara-tests-scenario-ussuri
    parent: sahara-tests-scenario-py3
    nodeset: openstack-single-node-bionic
    override-checkout: stable/ussuri

# pre-Ussuri scenario tests: fully-py3 based according the rules
# (jobs running on master must use Python 3), but use RGW
# on pre-Train branches as Swift/py3 does not work there.
- job:
    name: sahara-tests-scenario-train
    parent: sahara-tests-scenario
    nodeset: openstack-single-node-bionic
    override-checkout: stable/train

- job:
    name: sahara-tests-scenario-stein
    parent: sahara-tests-scenario-py3
    nodeset: openstack-single-node-bionic
    override-checkout: stable/stein

- job:
    name: sahara-tests-scenario-modwsgi
    description: |
      Run scenario tests on a Sahara deployment based on mod_wsgi.
    parent: sahara-tests-scenario
    vars:
      devstack_localrc:
        SAHARA_USE_MOD_WSGI: 'True'

# variant to be used on pre-Ussuri branches (Python 2 only)
- job:
    name: sahara-tests-scenario
    branches:
      - stable/rocky
      - stable/stein
      - stable/train
    vars:
      devstack_localrc:
        USE_PYTHON3: 'False'

- job:
    name: sahara-tests-scenario-radosgw
    description: |
      Run scenario tests for Sahara, using RadosGW instead of Swift.
    parent: sahara-tests-scenario
    required-projects:
      - openstack/devstack-plugin-ceph
    host-vars:
      controller:
        devstack_plugins:
            devstack-plugin-ceph: 'https://opendev.org/openstack/devstack-plugin-ceph'
    vars:
      devstack_localrc:
        ENABLE_CEPH_CINDER: 'False'
        ENABLE_CEPH_C_BAK: 'False'
        ENABLE_CEPH_GLANCE: 'False'
        ENABLE_CEPH_MANILA: 'False'
        ENABLE_CEPH_NOVA: 'False'
        ENABLE_CEPH_RGW: 'True'
      devstack_local_conf:
        test-config:
          "$TEMPEST_CONFIG":
            service_available:
              swift: 'True'
      devstack_services:
        s-account: false
        s-container: false
        s-object: false
        s-proxy: false
      sahara_enable_s3: True

- job:
    name: sahara-tests-scenario-py3
    description: |
      Run scenario tests on a Sahara deployment based on Python 3.
      Required by some pre-Ussuri branches of sahara, which also
      needs swift (not fully ported to Python 3 at the time).
    parent: sahara-tests-scenario-radosgw
    vars:
      devstack_localrc:
        USE_PYTHON3: 'True'

- job:
    name: sahara-tests-scenario-multinode-spark
    description: |
      Run scenario tests based on Spark on a multinode Sahara deployment.
    parent: sahara-tests-scenario-radosgw
    nodeset: openstack-two-node
    vars:
      sahara_image_name: xenial-spark
      sahara_image_url: '{{ ansible_user_dir }}/{{ zuul.projects["opendev.org/openstack/sahara-image-elements"].src_dir }}/ubuntu_sahara_spark_latest.qcow2'
      sahara_plugin: spark
      sahara_plugin_version: 1.6.0
      sahara_scenario_test_template: spark-1.6.0.yaml.mako
      sahara_flavors:
        sah1.small:
          id: 20
          ram: 1536
          disk: 20
          vcpus: 1
          ephemeral: 0
